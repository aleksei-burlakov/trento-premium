---

- name: "Get the corosync version"
  set_fact:
    corosync_version: "{{ ansible_facts.packages['corosync'][0].version }}"
  delegate_facts: true
  when: "'corosync' in ansible_facts.packages"

- name: "{{ name }} compare corosync versions across nodes"
  assert:
    that:
      - "{{ groups[item] | map('extract', hostvars) | map(attribute='corosync_version') | list | unique | length }} == 1"
    quiet: true
  loop: "{{ group_names }}"
  register: config_updated
  changed_when: config_updated.failed
  when: "corosync_version is defined"

- block:
    - name: "{{ name }} Post results"
      import_role:
        name: post-results
  vars:
    status: "{{ corosync_version is defined and config_updated is not changed }}"
