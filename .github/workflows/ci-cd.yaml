name: Continous Integration and Demo Deployment
on:
  push:
    tags-ignore:
      - '*'
    branches:
      - 'master'
  pull_request:
  release:
    types: [published]

env:
  PACKAGE_NAME: trento-premium
  OBS_USER: ${{ secrets.OBS_USER }}
  OBS_PASS: ${{ secrets.OBS_PASS }}
  OBS_PROJECT: ${{ secrets.OBS_PROJECT }}
  FOLDER: packaging/suse
  REPOSITORY: ${{ github.repository }}

jobs:
  obs-commit:
    runs-on: ubuntu-18.04
    container:
      image: ghcr.io/trento-project/continuous-delivery:master
      env:
        GITHUB_OAUTH_TOKEN:  ${{ secrets.GITHUB_TOKEN }}
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: configure OSC
    # OSC credentials must be configured beforehand as the HOME variables cannot be changed from /github/home
    # that is used to run osc commands
      run: |
        /scripts/init_osc_creds.sh
        mkdir -p $HOME/.config/osc
        cp /root/.config/osc/oscrc $HOME/.config/osc
    - name: Prepare trento.changes file
      run: |
        VERSION=$(./hack/get_version_from_git.sh)
        TAG=$(echo $VERSION | cut -f1 -d+)
        hack/gh_release_to_obs_changeset.py $REPOSITORY -a shap-staff@suse.de -t $TAG -f $FOLDER/trento.changes
    - name: prepare _service file
      run: |
        VERSION=$(./hack/get_version_from_git.sh)
        sed -i 's~%%REVISION%%~${{ github.sha }}~' $FOLDER/_service && \
        sed -i 's~%%REPOSITORY%%~${{ github.repository }}~' $FOLDER/_service && \
        sed -i 's~%%VERSION%%~'"${VERSION}"'~' $FOLDER/_service
    - name: commit changes into OBS
      run: |
        cp $FOLDER/_service . && cat _service && /scripts/upload.sh

  package:
    runs-on: ubuntu-20.04    
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Compress the checks
        run: |
          tar czf trento-premium-checks.tgz runner
               
      - uses: actions/upload-artifact@v2
        with:
          name: trento-premium-checks
          path: |
                  trento-premium-checks.tgz

  release-rolling:
    needs: package
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: trento-premium-checks
      - uses: "marvinpinto/action-automatic-releases@v1.2.1"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "rolling"
          prerelease: true
          title: "Cutting Edge"
          files: |
            trento-premium-checks.tgz
